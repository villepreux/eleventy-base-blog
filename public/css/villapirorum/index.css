/*
  _   __ _  __ __       ___   _
 | | / /(_)/ // /___ _ / _ \ (_)____ ___   ____ __ __ __ _
 | |/ // // // // _ `// ___// // __// _ \ / __// // //  ' \
 |___//_//_//_/ \_,_//_/   /_//_/   \___//_/   \_,_//_/_/_/
  ___ ___ __             ______ __                               __
 <  /<  // /_ __ __ ____/_  __// /  ___  __ _  ___  ___ ____ __ / /___  __ __
 / / / // __// // //___/ / /  / _ \/ -_)/  ' \/ -_)(_-</___// // // _ \/ // /
/_/ /_/ \__/ \_, /      /_/  /_//_/\__//_/_/_/\__//___/     \___/ \___/\_, /
   __       /___/       __    __             __   __                  /___/
  / /  ___ _ ___ ___   / /   / /___  ___ _  / /_ / /  ___  __ _  ___
 / _ \/ _ `/(_-</ -_) / _ \ / // _ \/ _ `/ / __// _ \/ -_)/  ' \/ -_)
/_.__/\_,_//___/\__/ /_.__//_/ \___/\_, /  \__//_//_/\__//_/_/_/\__/
                                   /___/

VillaPirorum - 11ty-Themes-joy - base blog theme

*/

@layer base {

	/* Light & Dark color-schemes support */

	:root {

		color-scheme: light dark;
	}

	/* Unitless viewport-width custom property */

	@property --100vw {

		syntax: "<length>";
		initial-value: 0px;
		inherits: false;
	}

	:root {

		--100vw: 100vw;
		--unitless-viewport-width: tan(atan2(var(--100vw), 1px));
	}

	/* Body as-a-container width property */

	/* Normalize */

	*,
	::before,
	::after {

		box-sizing: border-box;
	}

	body {

		margin:         0;
		min-height:     100svh;					/*
		container-type:	inline-size;		*/ /* containment breaks fixed header */
	}

	[hidden] {

		display: none !important;
	}

	/* View transitions support */

	@media (prefers-reduced-motion: no-preference) {

		@view-transition {

				navigation: auto;
		}

	} /* @media (prefers-reduced-motion: no-preference) */

	/* Allow transitions to auto */

	html {

		interpolate-size: allow-keywords;
	}

	/* Typography */

	:root {

		--root-font-size: clamp(1.00rem, 0.59rem + 1.47vw, 1.25rem);
	}

	html {

		font-size:								var(--root-font-size);
		hanging-punctuation:			first allow-end last;
		-webkit-font-smoothing:		antialiased;
		-moz-osx-font-smoothing:	grayscale;
		line-height:							1.5;
		font-family:							system-ui;
		text-underline-offset:		0.24em;
	}

	a {

		font-weight: 600; /* Very opinionated. Color + Weight ensures a11y against background AND surrounding text */
	}

	pre {

		white-space: pre-wrap;
	}

	input, select, textarea, button, ::-webkit-file-upload-button {

		font-size: inherit;
		padding: 	.25em .25rem;
	}

	h1, h2, h3, h4, h5, h6 {

		text-wrap: balance;
	}

	h1 { font-size: 2.00rem; }
	h2 { font-size: 1.50rem; }
	h3 { font-size: 1.17rem; }
	h4 { font-size: 1.00rem; }
	h5 { font-size: 0.83rem; }
	h6 { font-size: 0.67rem; }

	h1 { margin: 0.67em 0; }

	/* Typography - Fluid font size */

	:root {

		--fluid-font-size-min-viewport-width:  320; --fluid-font-size-min: 1.0rem;
		--fluid-font-size-max-viewport-width: 1600; --fluid-font-size-max: 1.5rem;

		--fluid-font-size-viewport-ratio: clamp(0, calc((var(--unitless-viewport-width) - var(--fluid-font-size-min-viewport-width)) / (var(--fluid-font-size-max-viewport-width) - var(--fluid-font-size-min-viewport-width))), 1);
		--fluid-font-size-eased-viewport-ratio: sin(var(--fluid-font-size-viewport-ratio) * 3.14159 / 2);
		--fluid-font-size: clamp(var(--fluid-font-size-min), var(--fluid-font-size-min) + ( var(--fluid-font-size-eased-viewport-ratio) * (var(--fluid-font-size-max) - var(--fluid-font-size-min)) ), var(--fluid-font-size-max));

		--root-font-size: var(--fluid-font-size);
	}

	/* Layout */

	/* Layout - inline small images */

				img[width="16"],     img[width="24"],     img[width="32"],     img[width="48"],
				svg[width="16"],     svg[width="24"],     svg[width="32"],     svg[width="48"],
		picture[width="16"], picture[width="24"], picture[width="32"], picture[width="48"] {

		display: inline
	}

	/* System color with site-level color-scheme preference support */

	/* (Colors choise initialy based on Miriam Eric Suzanne https://www.miriamsuzanne.com/assets/css/layer/default.css) */

	/* First, look at browser preferences */

	html {

		--Canvas:           var(--bg,               #1c1c1c);
		--CanvasText:       var(--text,             #f8f9fa);
		--Link:             var(--action,           #8cabff);
		--VisitedText:      var(--action,           #ffadff);
		--ActiveText:       var(--active,           #ff6666);
		--ButtonFace:       var(--btn-bg,           #2b2a33);
		--ButtonFaceHover:  var(--btn-hover-bg,     #52525e);
		--ButtonText:       var(--btn-text,         #fbfbfe);
		--ButtonTextHover:  var(--btn-hover-text,    var(--ButtonText));
		--ButtonBorder:     var(--btn-border,        var(--border, currentColor));
		--Field:            var(--field-bg,         #2b2a33);
		--FieldText:        var(--field-text,       #fbfbfe);
		--Highlight:        var(--highlight,        #3f638b);
		--HighlightText:    var(--highlight-text,    var(--CanvasText));
		--SelectedItem:     var(--selected,         skyblue);
		--SelectedItemText: var(--selected-text,    black);
		--AccentColor:      var(--accent,           #ff5ce4);
		--AccentColorText:  var(--accent-text,      black);
	}

	@media (prefers-color-scheme: light) {

		html {

			--Canvas:           var(--bg,               #f8f9fa);
			--CanvasText:       var(--text,             #1c1c1c);
			--Link:             var(--action,           #00e);
			--VisitedText:      var(--action,           #551a8b);
			--ActiveText:       var(--active,           #e00);
			--ButtonFace:       var(--btn-bg,           #e9e9ed);
			--ButtonFaceHover:  var(--btn-bg,           #ffffff);
			--ButtonText:       var(--btn-text,         #1c1c1c);
			--ButtonTextHover:  var(--btn-hover-text,    var(--ButtonText));
			--ButtonBorder:     var(--btn-border,        var(--border, currentColor));
			--Field:            var(--field-bg,         #f8f9fa);
			--FieldText:        var(--field-text,       #1c1c1c);
			--Highlight:        var(--highlight,        #b3d8ff);
			--HighlightText:    var(--highlight-text,    var(--CanvasText));
			--SelectedItem:     var(--selected,         #0063e1);
			--SelectedItemText: var(--selected-text,    white);
			--AccentColor:      var(--accent,           #7d004f);
			--AccentColorText:  var(--accent-text,      white);
		}
	}

	/* Then look at what is allowed at this site CSS level */
	/* (this is what is currently used by 11tytheme.sjoy.lol) */

	html {

		--Canvas:           light-dark(var(--bg,               #f8f9fa),                    var(--bg,               #1c1c1c)                    );
		--CanvasText:       light-dark(var(--text,             #1c1c1c),                    var(--text,             #f8f9fa)                    );
		--Link:             light-dark(var(--action,           #00e),                       var(--action,           #8cabff)                    );
		--VisitedText:      light-dark(var(--action,           #551a8b),                    var(--action,           #ffadff)                    );
		--ActiveText:       light-dark(var(--active,           #e00),                       var(--active,           #ff6666)                    );
		--ButtonFace:       light-dark(var(--btn-bg,           #e9e9ed),                    var(--btn-bg,           #2b2a33)                    );
		--ButtonFaceHover:  light-dark(var(--btn-bg,           #ffffff),                    var(--btn-hover-bg,     #52525e)                    );
		--ButtonText:       light-dark(var(--btn-text,         #1c1c1c),                    var(--btn-text,         #fbfbfe)                    );
		--ButtonTextHover:  light-dark(var(--btn-hover-text,    var(--ButtonText)),           var(--btn-hover-text,    var(--ButtonText))           );
		--ButtonBorder:     light-dark(var(--btn-border,        var(--border, currentColor)), var(--btn-border,        var(--border, currentColor)) );
		--Field:            light-dark(var(--field-bg,         #f8f9fa),                    var(--field-bg,         #2b2a33)                    );
		--FieldText:        light-dark(var(--field-text,       #1c1c1c),                    var(--field-text,       #fbfbfe)                    );
		--Highlight:        light-dark(var(--highlight,        #b3d8ff),                    var(--highlight,        #3f638b)                    );
		--HighlightText:    light-dark(var(--highlight-text,    var(--CanvasText)),           var(--highlight-text,    var(--CanvasText))           );
		--SelectedItem:     light-dark(var(--selected,         #0063e1),                    var(--selected,         skyblue)                    );
		--SelectedItemText: light-dark(var(--selected-text,    white),                      var(--selected-text,    black)                      );
		--AccentColor:      light-dark(var(--accent,           #7d004f),                    var(--accent,           #ff5ce4)                    );
		--AccentColorText:  light-dark(var(--accent-text,      white),                      var(--accent-text,      black)                      );
	}

	/* And finaly if color-scheme is explicitly specified at the site HTML level, then it takes precedence */

	html[color-scheme=dark],
	html[data-theme=dark] {

		--Canvas:           var(--bg,               #1c1c1c);
		--CanvasText:       var(--text,             #f8f9fa);
		--Link:             var(--action,           #8cabff);
		--VisitedText:      var(--action,           #ffadff);
		--ActiveText:       var(--active,           #f66);
		--ButtonFace:       var(--btn-bg,           #2b2a33);
		--ButtonFaceHover:  var(--btn-hover-bg,     #52525e);
		--ButtonText:       var(--btn-text,         #fbfbfe);
		--ButtonTextHover:  var(--btn-hover-text,    var(--ButtonText));
		--ButtonBorder:     var(--btn-border,        var(--border, currentColor));
		--Field:            var(--field-bg,         #2b2a33);
		--FieldText:        var(--field-text,       #fbfbfe);
		--Highlight:        var(--highlight,        #3f638b);
		--HighlightText:    var(--highlight-text,    var(--CanvasText));
		--SelectedItem:     var(--selected,         skyblue);
		--SelectedItemText: var(--selected-text,    black);
		--AccentColor:      var(--accent,           #ff5ce4);
		--AccentColorText:  var(--accent-text,      black);
	}

	html[color-scheme=light],
	html[data-theme=light] {

		--Canvas:           var(--bg,               #f8f9fa);
		--CanvasText:       var(--text,             #1c1c1c);
		--Link:             var(--action,           #00e);
		--VisitedText:      var(--action,           #551a8b);
		--ActiveText:       var(--active,           #e00);
		--ButtonFace:       var(--btn-bg,           #e9e9ed);
		--ButtonFaceHover:  var(--btn-bg,           #ffffff);
		--ButtonText:       var(--btn-text,         #1c1c1c);
		--ButtonTextHover:  var(--btn-hover-text,    var(--ButtonText));
		--ButtonBorder:     var(--btn-border,        var(--border, currentColor));
		--Field:            var(--field-bg,         #f8f9fa);
		--FieldText:        var(--field-text,       #1c1c1c);
		--Highlight:        var(--highlight,        #b3d8ff);
		--HighlightText:    var(--highlight-text,    var(--CanvasText));
		--SelectedItem:     var(--selected,         #0063e1);
		--SelectedItemText: var(--selected-text,    white);
		--AccentColor:      var(--accent,           #7d004f);
		--AccentColorText:  var(--accent-text,      white);
	}

	/* Colors - Semantics */

	/* On sytem color basis, define our semantic colors */

	:root {

		--theme-color:              var(--VisitedText);
		--accent-color:             var(--Link);

		--background-color:         var(--Canvas);
		--text-color:               var(--CanvasText);

		--link-color:               var(--Link);
		--link-color-visited:       var(--VisitedText);
		--link-color-hover:         var(--ActiveText);

		--field-background-color:   var(--Field);
		--field-text-color:         var(--FieldText);

		--hard-border-color:        var(--FieldText, currentColor);
		--soft-border-color:        color-mix(in srgb, var(--hard-border-color) 33%, transparent);
	}

	html {

		background-color:	var(--background-color);
		color:						var(--text-color);
	}

	a           { color: var(--link-color);         }
	a:visited   { color: var(--link-color-visited); }
	a:hover     { color: var(--link-color-hover);   }

	@media (prefers-reduced-motion: no-preference) {

			a:hover { transition: color .7s  }
	}

	/* Layout - Navigation lists */

	nav ul {

		list-style: none;
		padding-inline-start: 0;

		display:        	flex;
		flex-wrap:      	wrap;
		gap:            	1em;
		justify-content:	flex-end;
	}

	nav li:before {

		content: "\200B";
		position: absolute;
	}

	/* Animations */

	@media (prefers-reduced-motion: no-preference) {
	@supports (animation-timeline: view()) {

		main :is(

			p, ul, ol, pre, table,
			picture, img:not(picture img),

			) {

			--appear-scale-x: .5;
			--appear-scale-y: .5;

			animation:          appear linear;
			animation-timeline: view();
			animation-range:    entry 0% entry min(20vh, 80%);
			animation-duration: 1ms; /* For Firefox */
		}

		main :is(picture, img:not(picture img)) {

			--appear-scale-x: 1;
		}

		@keyframes appear {

				0% { opacity:   0%; transform: scale(var(--appear-scale-x), var(--appear-scale-y)); }
			100% { opacity: 100%; transform: scale(1, 1); }
		}

	} /* @supports (animation-timeline: view()) */
	} /* @media (prefers-reduced-motion: no-preference) */

	/* Utility classes */

	.visually-hidden:not(:focus):not(:active) {

		clip:           rect(0 0 0 0);
		clip-path:      inset(50%);
		height:         1px;
		overflow:       hidden;
		position:       absolute;
		white-space:    nowrap;
		width:          1px;
		margin:         0;
		padding:        0;
	}

} /* @layer base */

@layer base-blog {

	/* Base blog classes */

	a.home-link {

		text-decoration:	none;
		font-weight:    	bold;
		text-wrap:      	balance;
	}

	/* Posts list */

	.postlist {

		list-style:     	none;
		padding:        	0;
		list-style-type:	"";
	}

	.postlist-item {

		display:            flex;
		align-items:        baseline;
		counter-increment:  start-from -1;
		margin-bottom:      1em;
		flex-direction:     row;
		flex-wrap:          nowrap;
		justify-content:    space-between;
	}

	@media (max-width: 520px) {

		.postlist-item {

			flex-direction:     row;
			flex-wrap:          wrap;
			width:              100%;
			justify-content:    flex-start;
		}

		.postlist-link {

			flex-grow:  1;
			width:      100%;
		}
	}

	.postlist-item:before {

		display:        inline-block;
		pointer-events: none;
		content:        "" counter(start-from, decimal-leading-zero) ". ";
		line-height:    100%;
		text-align:     right;
		margin-inline:  .5em;
		order:          -1;
	}

	.postlist-date {

		word-spacing:   -0.5px;
		order:          -1;
		min-width:      12em;
	}

	.postlist-link {

		flex-grow: 1;
	}

	.postlist-item-active .postlist-link {

		font-weight: bold;
	}

	/* Code blocks */

	pre:not([class*="language-"]):has(code) {

		background-color:   var(--field-background-color);
		color:              var(--field-text-color);
		margin:             .5em 0;
		line-height:        1.375;
		tab-size:           4;
		hyphens:            none;
		direction:          ltr;
		text-align:         left;
		white-space:        pre;
		word-spacing:       normal;
		word-break:         normal;
		overflow-x:         auto;
		border:             1px solid var(--soft-border-color);
		border-radius:      .25em;
		padding:            1em;
	}

	code {

		word-break: break-word;
	}

} /* @layer base-blog */

@layer eleventy-themes-joy {

	/* https://11tytheme.sjoy.lol/ specific */

	/* Enable light/dark/auto mode switcher if the theme uses color-scheme */

	#mode-switcher {

			display: block !important;
	}

} /* @layer eleventy-themes-joy */

@layer villapirorum {

	/* Villapirorum semantic / classless styles */

	html {

		overflow: auto;
		scrollbar-gutter: stable; /* KNOWN ISSUE: scrollbar-gutter does not work well with fixed header */
	}

	body {

		display: flex;
		flex-direction: column;
	}

	main {

		flex-grow: 1;
	}

	/* Full width horizontal header */

	body > header {

		display:            flex;
		justify-content:    space-between;
		align-items:        center;
		padding:            1em;
		flex-wrap:          wrap;
		gap:                1em;
	}

	body > header > :last-child {

		flex-grow: 1;
	}

	body > header ul {

		margin: 0;
	}

	/* Full width main area... */

	main {

		padding-inline: 0;
	}

	/* ... With width-constrained content */

	body  {

		--main-padding:     1rem;
		--main-max-width:   960px;
	}

	body > :is(main, footer) {

		width:          min(var(--main-max-width), 100%);
		margin-inline:  auto;
		padding-inline: var(--main-padding);
	}

	:is(main, main > heading-anchors, body > footer) > :where(

		pre:not([class*="language-"]),
		pre[class*="language-"]

		):not(:is(.visually-hidden, [hidden])) {

		--max-width:    1200px;

		margin-inline:  calc(.5 * calc(min(100vw, var(--main-max-width)) - min(100vw, var(--max-width))));
	}

	/* Markup : Sectioning */

	:is(article, aside, nav, section) > :is(article, aside, nav, section) { margin-inline: 0; }

	/* Images (full-width by default) */

	video, iframe, img, picture, figure, canvas {

		display: inline-block;
		width:   100%;
		height:  auto;

		vertical-align: middle;
	}

	figure { margin: 0; }

	video, iframe, img {

		max-width: 100%;
		object-fit: cover;
	}

	picture {

		margin: 0;
		background-color: light-dark(white, black);
	}

	img {

		object-fit:      cover;
		object-position: center;
	}

	/* Markup : misc. */

	table           { max-width: 100%; margin-block: 1em; border-collapse: collapse; }
	table caption   { padding: 0.25em 0.25rem; }
	th, td          { padding: 0.25em 0.25rem; text-align: left; border: 1px solid var(--soft-border-color); }
	figcaption      { text-align: center; padding: .3em .3rem; }
	figcaption > *  { margin-inline: 0; }

	legend          { margin-inline: .5rem }

	blockquote      { padding-inline: 1rem; border-left: .3rem solid var(--theme-color); }

	u, del          { text-decoration-color: red; }
	u               { text-decoration-style: wavy; }

	kbd {

		display:            inline-block;
		padding:            0.1em 0.2rem;
		font-size:          0.825em;

		color:              var(--field-text-color);
		background-color:   var(--field-background-color);
		border-radius:      0.25rem;
		border:             2px solid var(--soft-border-color);
		box-shadow:         var(--background-color);
		box-shadow:         inset 0 -1px 0 0 var(--background-color);
	}

	code {

		padding:            0.1em 0.2rem;

		color:              var(--field-text-color);
		background-color:   var(--field-background-color);
		border-color:       var(--soft-border-color);
	}

	code:not(pre code) {

		border: 1px solid var(--soft-border-color);
	}

	pre > code {

		display: block;
	}

	/* Forms */

	form p {

		display:         flex;
		justify-content: flex-end;
		flex-direction:  row-reverse;
		flex-wrap:       wrap;
		gap:             1em;
		overflow:        hidden;
	}

	form p br { display: none }

	form p :where(input, select, textarea) { width: min(40vw, 220px); }
	form p input[type="file"]              { width: 100%; }
	form p input[type="button"]            { width: auto; }
	form p input[type="submit"]            { width: auto; }
	form p input[type="reset"]             { width: auto; }
	form p input[type="radio"]             { width: auto;  margin-right: 1em;}
	form p input[type="checkbox"]          { width: auto;  margin-right: 1em;}
	form p ::-webkit-file-upload-button    { width: 220px; margin-right: 1em; }
	form textarea                          { width: 100%; }

	/* Fixed header - Breakpoints - Depends on your navigation menu size */

															body { --margin-for-header: 118px; }
	@media (max-width: 960px) { body { --margin-for-header: 160px; } }
	@media (max-width: 400px) { body { --margin-for-header: 220px; } }

	/* Fixed header - layout */

	body {

		padding-block-start: var(--margin-for-header);
	}

	body > header {

		--header-color-transparency-opaque: 80%;
		--header-blur-opaque: 4px;

		width:      100%;
		position:   fixed; /* KNOWN ISSUE: Fixed does not work well with scrollbar-gutter */
		top:        0;
		z-index:    1;

		background-color: color-mix(in srgb, var(--background-color) var(--header-color-transparency-opaque), transparent);
		backdrop-filter:  blur(var(--header-blur-opaque));
	}

	/* Fixed header - https://11tytheme.sjoy.lol/ specific */

	@media (prefers-reduced-motion: no-preference) {
	@supports (animation-timeline: scroll()) {

		@property --header-color-transparency {

			syntax: "<percentage>";
			inherits: true;
			initial-value: 0%;
		}

		@property --header-blur {

			syntax: "<length>";
			inherits: true;
			initial-value: 0px;
		}

		body > header {

			--header-color-transparency-start:  0%;
			--header-color-transparency-end:    var(--header-color-transparency-opaque);

			--header-blur-start:                0px;
			--header-blur-end:                  var(--header-blur-opaque);

			--header-color-transparency:        var(--header-color-transparency-start);
			--header-blur:                      var(--header-blur-start);

			background-color:   color-mix(in srgb, var(--background-color) var(--header-color-transparency), transparent);;
			backdrop-filter:    blur(var(--header-blur));

			animation:          header-scroll ease both;
			animation-timeline: scroll();
			animation-range:    0% 50vh;
			animation-duration: 1ms; /* For Firefox */
		}

		@keyframes header-scroll {

				0% { --header-color-transparency: var(--header-color-transparency-start); --header-blur: var(--header-blur-start);  }
			100% { --header-color-transparency: var(--header-color-transparency-end);   --header-blur: var(--header-blur-end);    }
		}

		/**
		* Show header on scroll up, hide on scroll down
		* Based on Fabrizio Calderan (fabrizio.dev) demo
		* https://codepen.io/fcalderan/full/LYKwyyd
		* Itselft based on article by @bramus
				* https://www.bram.us/2023/10/23/css-scroll-detection/
		*/

		@property --scroll {

			syntax: "<number>";
			inherits: true;
			initial-value: 0;
		}

		@property --scroll-delayed {

			syntax: "<number>";
			inherits: true;
			initial-value: 0;
		}

		@property --scroll-direction {

			syntax: "<number>";
			inherits: true;
			initial-value: 0;
		}

		@keyframes set-scroll-properties {

			to {
				--scroll:         1000;
				--scroll-delayed: 1000;
			}
		}

		:root {

			--header-effect-duration: .5s;

			animation: set-scroll-properties linear both;
			animation-timeline: scroll(root);
			animation-duration: 1ms; /* For Firefox */
		}

		body {

			transition: --scroll-delayed calc(var(--header-effect-duration) + .01s);

			--scroll-velocity:  calc(var(--scroll) - var(--scroll-delayed));
			--scroll-speed:     max(var(--scroll-velocity), -1 * var(--scroll-velocity));
			--scroll-direction: calc(var(--scroll-velocity) / var(--scroll-speed));
		}

		@property --translate {

				syntax: "<length>";
				inherits: true;
				initial-value: 0px;
		}

		body > header {

			top:   unset;
			inset: 0 0 auto;

			will-change:    transform;
			transition:     transform var(--header-effect-duration);
			transform:      translateY(var(--translate));

			@container style(--scroll-direction: 0) {

				transition-delay: calc(infinity * 1s);
			}

			@container style(not (--scroll-direction: 0)) {

				transition-delay: 0s;
			}

			@container style(--scroll-direction: -1) {

				--translate: 0;
			}

			@container style(--scroll-direction: 1) {

				--translate: -100%;
			}
		}

	} /* @supports (animation-timeline: scroll()) */
	} /* @media (prefers-reduced-motion: no-preference) */

	/* Base blog home link */

	@media (prefers-reduced-motion: no-preference) {
	@supports (animation-timeline: scroll()) {

		a.home-link {

			font-size:          2em;
			animation:          home-link-scroll ease both;
			animation-timeline: scroll();
			animation-range:    0% 50vh;
			animation-duration: 1ms; /* For Firefox */
		}

		@keyframes home-link-scroll {

				0% { font-size: 2em; }
			100% { font-size: 1em; }
		}

	} /* @supports (animation-timeline: scroll()) */
	} /* @media (prefers-reduced-motion: no-preference) */


	/* Mobile friendly - Single handed / thumb friendly */

	@media (max-width: 480px) {

			[href="#skip"]  { order: 2; }
			body > header   { order: 1; }

			body {

					padding-block-start: unset;
					padding-block-end:   var(--margin-for-header);
			}

			body > header {

					--header-color-transparency-start: 	var(--header-color-transparency-opaque);
					--header-blur-start:                var(--header-blur-opaque);

					top:      unset;
					bottom:   0;
					animation:  unset;

					@container style(--scroll-direction: -1) {

							--translate: 0;
					}

					@container style(--scroll-direction: 1) {

							--translate: 100%;
					}
			}
	}

	/* 11ty classes specific - Special lists */

	ul:is(.links-nextprev, .post-metadata) {

			list-style: none;
			padding-inline-start: 0;
			display: flex;
			gap: 1em;
			flex-wrap: wrap;
	}

	ul:is(.links-nextprev, .post-metadata) li:before {

			content: "\200B";
			position: absolute;
	}

	ul.links-nextprev {

			justify-content: space-between;
	}

	li.links-nextprev-next {

			text-align: right;
	}

	/* 11ty classes specific - Message box */

	.message-box {

			--color-message-box: light-dark(white, black);

			--max-width: 50vw;
			margin-inline: calc(.5 * calc(min(var(--max-width), 100vw) - 100vw));
	}

	/* 11ty classes specific - Metadata */

			:is(time, .post-tag) {

					display: inline-block;
			}

	:is(time, .post-tag):before {

			display:            inline-block;
			color:              color-mix(in srgb, currentColor 33%, transparent);
			text-decoration:    none;
			margin-inline-end:  .5em;
	}

	.post-tag {

			text-transform: capitalize;
	}

	.post-tag:before { content: "#"; }
				time:before { content: "📅︎"; }

} /* @layer villapirorum */


/* 11ty, 11ty base blog, and 11tytheme.sjoy.lol are not really ready for @layer usage /*
/* So we need to define inline margin here, ot of layers */

/* Here you can define elements that are wider that the central main area */

:is(main, main > heading-anchors, body > footer) > :is(

	pre:not([class*="language-"]),
	pre[class*="language-"]

	):not(:is(.visually-hidden, [hidden])) {

	--max-width:    1200px;

	margin-inline:	calc(.5 * calc(min(100vw, var(--main-max-width)) - min(100vw, var(--max-width))));
}

/* Here you can customize which images are "hero" / full-screen-width images */

/** If don't want body { overflow-x: hidden; } then you need another solution for fullscreen images. Because:
 *  - We have a fixed header. Forces us to disable containment on body
 *  - Without containment on body we cannot have 100cqw to work properly
 *  - Without 100cqw we cannot handle 100vw image and vertical scrolbar
 */

body {

	overflow-x: hidden;
}

picture:not(:is(.visually-hidden, [hidden])):has(:is(

																																									[width="960"],  [width="970"],  [width="980"],  [width="990"],  [width="1000"],
	[width="1010"], [width="1020"], [width="1030"], [width="1040"], [width="1050"], [width="1060"], [width="1070"], [width="1080"], [width="1090"], [width="1100"],
	[width="1110"], [width="1120"], [width="1130"], [width="1140"], [width="1150"], [width="1160"], [width="1170"], [width="1180"], [width="1190"], [width="1200"],
	[width="1210"], [width="1220"], [width="1230"], [width="1240"], [width="1250"], [width="1260"], [width="1270"], [width="1280"], [width="1290"], [width="1300"],
	[width="1310"], [width="1320"], [width="1330"], [width="1340"], [width="1350"], [width="1360"], [width="1370"], [width="1380"], [width="1390"], [width="1400"],
	[width="1410"], [width="1420"], [width="1430"], [width="1440"], [width="1450"], [width="1460"], [width="1470"], [width="1480"], [width="1490"], [width="1500"],
	[width="1510"], [width="1520"], [width="1530"], [width="1540"], [width="1550"], [width="1560"], [width="1570"], [width="1580"], [width="1590"], [width="1600"],
	[width="1610"], [width="1620"], [width="1630"], [width="1640"], [width="1650"], [width="1660"], [width="1670"], [width="1680"], [width="1690"], [width="1700"],
	[width="1710"], [width="1720"], [width="1730"], [width="1740"], [width="1750"], [width="1760"], [width="1770"], [width="1780"], [width="1790"], [width="1800"],
	[width="1810"], [width="1820"], [width="1830"], [width="1840"], [width="1850"], [width="1860"], [width="1870"], [width="1880"], [width="1890"], [width="1900"],
	[width="1910"], [width="1920"], [width="1930"], [width="1940"], [width="1950"], [width="1960"], [width="1970"], [width="1980"], [width="1990"], [width="2000"]

	)) {

	--max-width: 100cqw;

	width:          var(--max-width);
	max-width:      var(--max-width);
	margin-inline:	calc(.5 * calc(min(100vw, var(--main-max-width)) - min(100vw, var(--max-width)) - 2 * var(--main-padding)));
}

